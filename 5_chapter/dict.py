#Напишите функцию to_dict(lst), которая принимает аргумент
# в виде списка и возвращает словарь, в котором каждый элемент списка
# является и ключом и значением. Предполагается,
# что элементы списка будут соответствовать правилам задания ключей в словарях.

def to_dict(lst):
    return {element: element for element in lst}

#Иван решил создать самый большой словарь в мире. Для этого он придумал функцию
# biggest_dict(**kwargs), которая принимает неограниченное количество параметров
# «ключ: значение» и обновляет созданный им словарь my_dict,
# состоящий всего из одного элемента «first_one» со значением «we can do it».
# Воссоздайте эту функцию.

my_dict = {'first_one': "we can do it"}
def biggest_dict(**kwargs):
    return my_dict.update(kwargs)

#Дана строка в виде случайной последовательности чисел от 0 до 9.
#Требуется создать словарь, который в качестве ключей будет принимать
# данные числа (т. е. ключи будут типом int), а в качестве значений
# – количество этих чисел в имеющейся последовательности.
# Для построения словаря создайте функцию count_it(sequence),
# принимающую строку из цифр. Функция должна возвратить словарь из
# 3-х самых часто встречаемых чисел.

#
def count_it(sequence):
    num_frequence = {int(element): sequence.count(element) for element in sequence}

    sort_slovar = sorted(num_frequence.items(), key = lambda element: element[1])

    itog_slovar = dict(sort_slovar[-3:])
    return itog_slovar

from collections import Counter

def count_it_2(sequence):
    return dict(Counter([int(num) for num in sequence]).most_common(3))

#Создайте словарь с количеством элементов не менее 5-ти.
# Поменяйте местами первый и последний элемент объекта.
# Удалите второй элемент. Добавьте в конец ключ «new_key» со
# значением «new_value». Выведите на печать итоговый словарь.
# Важно, чтобы словарь остался тем же (имел тот же адрес в памяти).

dictionary = {1: 10, 2: 20, 3: 30, 4: 40, 5: 50}

dictionary_values = dictionary.values()
dictionary_keys = dictionary.keys()

first = list(dictionary.items())[0]
last = list(dictionary.items())[-1]
dictionary.move_to_end(key=first[0])
dictionary.move_to_end(key=last[0], last=False)
print(dictionary)


#Имеется ряд словарей с пересекающимися ключами (значения - положительные числа).
# Напишите 2 функции, которые делают с массивом словарей следующие операции:
#1-ая функция max_dct(*dicts) формирует новый словарь по правилу:
#Если в исходных словарях есть повторяющиеся ключи, выбираем среди
# их значений максимальное и присваиваем этому ключу (например,
# в словаре_1 есть ключ “а” со значением 5, и в словаре_2 есть ключ “а”,
# но со значением 9. Выбираем максимальное значение, т. е. 9,
# и присваиваем ключу “а” в уже новом словаре).
#Если ключ не повторяется, то он просто переносится со своим значением
# в новый словарь (например, ключ “с” встретился только у одного словаря,
# а у других его нет. Следовательно, переносим в новый словарь этот ключ
# вместе с его значением). Сформированный словарь возвращаем.
#2-ая функция sum_dct(*dicts) суммирует значения повторяющихся ключей.
# Значения остальных ключей остаются исходными.
# (Проводятся операции по аналогу первой функции, но берутся не максимумы,
# а суммы значений одноименных ключей). Функция возвращает сформированный словарь.